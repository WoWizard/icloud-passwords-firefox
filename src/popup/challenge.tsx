import { ChangeEvent, useEffect, useState } from "react";
import browser from "webextension-polyfill";
import { Loading } from "./loading";
import styles from "./styles.module.scss";

interface Props {
  setReady: () => void;
}

export function ChallengeView({ setReady }: Props) {
  const [pake, setPAKE] = useState<object>();
  const [pin, setPin] = useState("");
  const [error, setError] = useState<unknown>();

  const requestChallengePin = async () => {
    try {
      const pake = await browser.runtime.sendMessage({
        cmd: "REQUEST_CHALLENGE_PIN",
      });

      setPAKE(pake);
    } catch (e) {
      setError(e);
    }
  };

  const setChallengePin = async (pin: string, pake: object) => {
    try {
      const result = await browser.runtime.sendMessage({
        cmd: "SET_CHALLENGE_PIN",
        pake,
        pin,
      });

      if (result !== true) throw result;

      setReady();
    } catch (e) {
      setError(error);
      setPin("");
      setPAKE(undefined);
      await requestChallengePin();
    }
  };

  useEffect(() => {
    requestChallengePin();
  }, []);

  useEffect(() => {
    if (pake === undefined || pin.length !== 6) return;

    setChallengePin(pin, pake);
  }, [pake, pin]);

  const handleChangePin = (e: ChangeEvent<HTMLInputElement>) => {
    setError(undefined);

    const pin = e.target.value.replace(/\D/g, "");

    if (pin.length > 6) {
      e.preventDefault();
      return;
    }

    setPin(pin);
  };

  if (pake === undefined) return <Loading />;

  return (
    <div className={styles.challenge}>
      <img src={"/images/PasswordsExtensionIcon_512.png"} alt="" />
      <div>
        <h1>Enable Password AutoFill</h1>
        <p>
          A verification code has been generated by your Mac. Enter the code to
          continue.
        </p>
        <input type="text" value={pin} onChange={handleChangePin} autoFocus />
      </div>
    </div>
  );
}
